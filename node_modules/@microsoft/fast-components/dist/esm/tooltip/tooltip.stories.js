import { STORY_RENDERED } from "@storybook/core-events";
import addons from "@storybook/addons";
import TooltipTemplate from "./fixtures/base.html";
function onShowClick() {
    for (let i = 1; i <= 4; i++) {
        const tooltipInstance = document.getElementById(`tooltip-show-${i}`);
        tooltipInstance.visible = !tooltipInstance.visible;
    }
}
function onShowCornersClick() {
    for (let i = 1; i <= 4; i++) {
        const tooltipInstance = document.getElementById(`tooltip-show-corners-${i}`);
        tooltipInstance.visible = !tooltipInstance.visible;
    }
}
//check changing anchor by changing anchorElement
function onAnchorMouseEnterProp(e) {
    if (!e.target) {
        return;
    }
    const tooltipInstance = document.getElementById("tooltip-anchor-switch");
    tooltipInstance.anchorElement = e.target;
}
//check changing anchor by setting attribute
function onAnchorMouseEnterAttribute(e) {
    if (!e.target) {
        return;
    }
    const tooltipInstance = document.getElementById("tooltip-anchor-switch");
    tooltipInstance.setAttribute("anchor", e.target.id);
}
addons.getChannel().addListener(STORY_RENDERED, (name) => {
    if (name.toLowerCase().startsWith("tooltip")) {
        document
            .querySelectorAll("fast-button[id^=anchor-anchor-switch-prop]")
            .forEach((el) => {
            el.addEventListener("mouseenter", onAnchorMouseEnterProp);
        });
        document
            .querySelectorAll("fast-button[id^=anchor-anchor-switch-attribute]")
            .forEach((el) => {
            el.addEventListener("mouseenter", onAnchorMouseEnterAttribute);
        });
        const showButton = document.getElementById("anchor-show");
        showButton.addEventListener("click", onShowClick);
        const showButtonCorners = document.getElementById("anchor-show-corners");
        showButtonCorners.addEventListener("click", onShowCornersClick);
    }
});
export default {
    title: "Tooltip",
};
export const Tooltip = () => TooltipTemplate;
